'\" t
.\"     Title: CREATE FOREIGN DATA WRAPPER
.\"    Author: The PostgreSQL Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.75.1 <http://docbook.sf.net/>
.\"      Date: 2009-12-01
.\"    Manual: PostgreSQL snapshot Documentation
.\"    Source: PostgreSQL snapshot
.\"  Language: English
.\"
.TH "CREATE FOREIGN DATA" "7" "2009-12-01" "PostgreSQL snapshot" "PostgreSQL snapshot Documentation"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
CREATE_FOREIGN_DATA_WRAPPER \- define a new foreign\-data wrapper
.\" CREATE FOREIGN DATA WRAPPER
.SH "SYNOPSIS"
.sp
.nf
CREATE FOREIGN DATA WRAPPER \fIname\fR
    [ VALIDATOR \fIvalfunction\fR | NO VALIDATOR ]
    [ OPTIONS ( \fIoption\fR \(aq\fIvalue\fR\(aq [, \&.\&.\&. ] ) ]
.fi
.SH "DESCRIPTION"
.PP
CREATE FOREIGN DATA WRAPPER
creates a new foreign\-data wrapper\&. The user who defines a foreign\-data wrapper becomes its owner\&.
.PP
The foreign\-data wrapper name must be unique within the database\&.
.PP
Only superusers can create foreign\-data wrappers\&.
.SH "PARAMETERS"
.PP
\fIname\fR
.RS 4
The name of the foreign\-data wrapper to be created\&.
.RE
.PP
VALIDATOR \fIvalfunction\fR
.RS 4
\fIvalfunction\fR
is the name of a previously registered function that will be called to check the generic options given to the foreign\-data wrapper, as well as to foreign servers and user mappings using the foreign\-data wrapper\&. If no validator function or
NO VALIDATOR
is specified, then options will not be checked at creation time\&. (Foreign\-data wrappers will possibly ignore or reject invalid option specifications at run time, depending on the implementation\&.) The validator function must take two arguments: one of type
text[], which will contain the array of options as stored in the system catalogs, and one of type
oid, which will be the OID of the system catalog containing the options, or zero if the context is not known\&. The return type is ignored; the function should indicate invalid options using the
\fBereport()\fR
function\&.
.RE
.PP
OPTIONS ( \fIoption\fR \(aq\fIvalue\fR\(aq [, \&.\&.\&. ] )
.RS 4
This clause specifies options for the new foreign\-data wrapper\&. The allowed option names and values are specific to each foreign data wrapper and are validated using the foreign\-data wrapper library\&. Option names must be unique\&.
.RE
.SH "NOTES"
.PP
At the moment, the foreign\-data wrapper functionality is very rudimentary\&. The purpose of foreign\-data wrappers, foreign servers, and user mappings is to store this information in a standard way so that it can be queried by interested applications\&. One such application is
dblink; see
Section F.8, \(lqdblink\(rq, in the documentation\&. The functionality to actually query external data through a foreign\-data wrapper library does not exist yet\&.
.PP
There is currently one foreign\-data wrapper validator function provided:
postgresql_fdw_validator, which accepts options corresponding to
libpq
connection parameters\&.
.SH "EXAMPLES"
.PP
Create a foreign\-data wrapper
dummy:
.sp
.if n \{\
.RS 4
.\}
.nf
CREATE FOREIGN DATA WRAPPER dummy;
.fi
.if n \{\
.RE
.\}
.PP
Create a foreign\-data wrapper
postgresql
with validator function
postgresql_fdw_validator:
.sp
.if n \{\
.RS 4
.\}
.nf
CREATE FOREIGN DATA WRAPPER postgresql VALIDATOR postgresql_fdw_validator;
.fi
.if n \{\
.RE
.\}
.PP
Create a foreign\-data wrapper
mywrapper
with some options:
.sp
.if n \{\
.RS 4
.\}
.nf
CREATE FOREIGN DATA WRAPPER mywrapper
    OPTIONS (debug \(aqtrue\(aq);
.fi
.if n \{\
.RE
.\}
.SH "COMPATIBILITY"
.PP
CREATE FOREIGN DATA WRAPPER
conforms to ISO/IEC 9075\-9 (SQL/MED), with the exception that the
VALIDATOR
clause is an extension and the clauses
LIBRARY
and
LANGUAGE
are not yet implemented in PostgreSQL\&.
.PP
Note, however, that the SQL/MED functionality as a whole is not yet conforming\&.
.SH "SEE ALSO"
ALTER FOREIGN DATA WRAPPER, DROP FOREIGN DATA WRAPPER, CREATE SERVER, CREATE USER MAPPING
