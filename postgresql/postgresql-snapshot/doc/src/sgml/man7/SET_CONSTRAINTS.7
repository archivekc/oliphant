'\" t
.\"     Title: SET CONSTRAINTS
.\"    Author: The PostgreSQL Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.75.1 <http://docbook.sf.net/>
.\"      Date: 2009-12-01
.\"    Manual: PostgreSQL snapshot Documentation
.\"    Source: PostgreSQL snapshot
.\"  Language: English
.\"
.TH "SET CONSTRAINTS" "7" "2009-12-01" "PostgreSQL snapshot" "PostgreSQL snapshot Documentation"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
SET_CONSTRAINTS \- set constraint checking modes for the current transaction
.\" SET CONSTRAINTS
.SH "SYNOPSIS"
.sp
.nf
SET CONSTRAINTS { ALL | \fIname\fR [, \&.\&.\&.] } { DEFERRED | IMMEDIATE }
.fi
.SH "DESCRIPTION"
.PP
SET CONSTRAINTS
sets the behavior of constraint checking within the current transaction\&.
IMMEDIATE
constraints are checked at the end of each statement\&.
DEFERRED
constraints are not checked until transaction commit\&. Each constraint has its own
IMMEDIATE
or
DEFERRED
mode\&.
.PP
Upon creation, a constraint is given one of three characteristics:
DEFERRABLE INITIALLY DEFERRED,
DEFERRABLE INITIALLY IMMEDIATE, or
NOT DEFERRABLE\&. The third class is always
IMMEDIATE
and is not affected by the
SET CONSTRAINTS
command\&. The first two classes start every transaction in the indicated mode, but their behavior can be changed within a transaction by
SET CONSTRAINTS\&.
.PP
SET CONSTRAINTS
with a list of constraint names changes the mode of just those constraints (which must all be deferrable)\&. The current schema search path is used to find the first matching name if no schema name is specified\&.
SET CONSTRAINTS ALL
changes the mode of all deferrable constraints\&.
.PP
When
SET CONSTRAINTS
changes the mode of a constraint from
DEFERRED
to
IMMEDIATE, the new mode takes effect retroactively: any outstanding data modifications that would have been checked at the end of the transaction are instead checked during the execution of the
SET CONSTRAINTS
command\&. If any such constraint is violated, the
SET CONSTRAINTS
fails (and does not change the constraint mode)\&. Thus,
SET CONSTRAINTS
can be used to force checking of constraints to occur at a specific point in a transaction\&.
.PP
Currently, only
UNIQUE,
PRIMARY KEY, and
REFERENCES
(foreign key) constraints are affected by this setting\&.
NOT NULL
and
CHECK
constraints are always checked immediately when a row is inserted or modified (\fInot\fR
at the end of the statement)\&. Uniqueness constraints that have not been declared
DEFERRABLE
are also checked immediately\&.
.PP
The firing of triggers that are declared as
\(lqconstraint triggers\(rq
is also controlled by this setting \(em they fire at the same time that the associated constraint should be checked\&.
.SH "NOTES"
.PP
This command only alters the behavior of constraints within the current transaction\&. Thus, if you execute this command outside of a transaction block (BEGIN/COMMIT
pair), it will not appear to have any effect\&.
.SH "COMPATIBILITY"
.PP
This command complies with the behavior defined in the SQL standard, except for the limitation that, in
PostgreSQL, it only applies to foreign\-key and uniqueness constraints\&.
